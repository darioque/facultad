PackageManifest subclass: #ManifestTPPPR	instanceVariableNames: ''	classVariableNames: ''	package: 'TP PPR-Manifest'!!ManifestTPPPR commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestTPPPR class	instanceVariableNames: ''!!ManifestTPPPR class methodsFor: 'code-critics' stamp: 'DarioSkidelsky 9/8/2021 15:57'!ruleRBModifiesCollectionRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#'TP PPR')) #'2021-09-08T15:57:09.004052-03:00') )! !Object subclass: #Maquina	instanceVariableNames: 'sensores'	classVariableNames: ''	package: 'TP PPR'!!Maquina methodsFor: 'removing' stamp: 'DarioSkidelsky 9/8/2021 15:57'!quitarSensor: unSerial		sensores do: 		[:elem | elem serial = unSerial ifTrue:[sensores remove: elem. Break]].		! !!Maquina methodsFor: 'validations' stamp: 'DarioSkidelsky 9/5/2021 17:30'!medidasIncorrectas		|cantidadIncorrectas|		cantidadIncorrectas := 0.		sensores do: [:elem | cantidadIncorrectas := cantidadIncorrectas + elem medidasIncorrectas].		^ cantidadIncorrectas.! !!Maquina methodsFor: 'validations' stamp: 'DarioSkidelsky 9/8/2021 14:21'!estaEnBuenEstado		|cantidadMedidas cantidadSensores|		cantidadMedidas := 0.		cantidadSensores := 0.		self sensores do: 		[:elem | cantidadSensores := cantidadSensores + 1. 		elem medidasIncorrectas = 0 ifTrue:[cantidadMedidas := cantidadMedidas + 1]].		(cantidadMedidas / cantidadSensores) >= 0.80 		ifTrue:[^ true].		^ false.! !!Maquina methodsFor: 'accumulator ops' stamp: 'DarioSkidelsky 9/6/2021 17:23'!medidasCorrectas		|cantidadCorrectas|		cantidadCorrectas := 0.		sensores do: 		[:elem | cantidadCorrectas := cantidadCorrectas + elem medidasCorrectas].		^ cantidadCorrectas.! !!Maquina methodsFor: 'accumulator ops' stamp: 'DarioSkidelsky 9/8/2021 14:21'!informarPorcentajeCorrectasHidra		|cantidadInc cantidadCor|		cantidadCor := 0.		cantidadInc := 0.		sensores do: 		[:elem | elem class = Hidraulico 		ifTrue:[cantidadCor := cantidadCor + elem medidasCorrectas.		cantidadInc := cantidadInc + elem medidasIncorrectas]].		cantidadInc = 0 ifFalse:[^ ((cantidadCor / cantidadInc) * 100) asString, '%'.].		^ 100 asString, '%'.				! !!Maquina methodsFor: 'converting' stamp: 'DarioSkidelsky 9/8/2021 15:10'!asString		|str|		str := ''.		sensores do: [:elem | str:= str, 'Sensor ', elem class asString, ' - Serial: ', elem serial asString, String cr].		^ str.! !!Maquina methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:41'!sensores	^ sensores! !!Maquina methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/8/2021 14:56'!existeSensor: unSerial		sensores detect: [:elem | elem serial = unSerial] 		ifNone:[^ false].		^ true.! !!Maquina methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:41'!sensores: anObject	sensores := anObject! !!Maquina methodsFor: 'initialization' stamp: 'DarioSkidelsky 9/4/2021 16:42'!initialize		sensores := OrderedCollection new.! !!Maquina methodsFor: 'adding' stamp: 'DarioSkidelsky 9/6/2021 17:24'!agregarSensor: unSensor		sensores detect: 		[:elem | elem serial = unSensor serial] 		ifNone:[sensores add: unSensor].		! !Object subclass: #Sensor1	instanceVariableNames: 'serial medidas'	classVariableNames: ''	package: 'TP PPR'!!Sensor1 methodsFor: 'validations' stamp: 'DarioSkidelsky 9/6/2021 17:19'!medidasIncorrectas		^ self subclassResponsibility.! !!Sensor1 methodsFor: 'validations' stamp: 'DarioSkidelsky 9/6/2021 17:19'!medidasCorrectas		^ self subclassResponsibility.! !!Sensor1 methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:49'!serial	^ serial! !!Sensor1 methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:49'!serial: anObject	serial := anObject! !!Sensor1 methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:49'!medidas: anObject	medidas := anObject! !!Sensor1 methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:49'!medidas	^ medidas! !!Sensor1 methodsFor: 'converting' stamp: 'DarioSkidelsky 9/5/2021 17:01'!asString 		|str|		str := 'Sensor ', self class asString, ' - Serial: ', serial asString, String cr, 'Medidas: ', String cr.		medidas do: [:elem | str:= str, elem asString, String cr].		^ str.		! !!Sensor1 methodsFor: 'initialization' stamp: 'DarioSkidelsky 9/4/2021 16:49'!initialize	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"			medidas := OrderedCollection new.		serial := 0.! !!Sensor1 methodsFor: 'adding' stamp: 'DarioSkidelsky 9/4/2021 16:50'!agregarMedida: unaMedida		medidas add: unaMedida.! !Sensor1 subclass: #Hidraulico	instanceVariableNames: 'valorMinimo valorMaximo'	classVariableNames: ''	package: 'TP PPR'!!Hidraulico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/5/2021 17:24'!medidasIncorrectas		|cantidadIncorrectas|		cantidadIncorrectas := 0.		medidas do: 		[:elem | (elem <= self valorMinimo or: elem >= self valorMaximo) 		ifTrue:[cantidadIncorrectas := cantidadIncorrectas + 1]]. 		^ cantidadIncorrectas.! !!Hidraulico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/5/2021 17:24'!medidasCorrectas		|cantidadCorrectas|		cantidadCorrectas := 0.		medidas do: 		[:elem | (elem >= self valorMinimo and: elem <= self valorMaximo) 		ifTrue:[cantidadCorrectas := cantidadCorrectas + 1]]. 		^ cantidadCorrectas.! !!Hidraulico methodsFor: 'converting' stamp: 'DarioSkidelsky 9/8/2021 14:28'!asString		^ super asString, 'Valor Maximo: ', valorMaximo asString, String cr, 'Valor Minimo: ', valorMinimo asString, String cr.! !!Hidraulico methodsFor: 'initialization' stamp: 'DarioSkidelsky 9/6/2021 17:10'!initialize 		super initialize.		valorMaximo := 0.0.		valorMinimo := 0.0.! !!Hidraulico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:35'!valorMinimo	^ valorMinimo! !!Hidraulico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:35'!valorMinimo: anObject	valorMinimo := anObject! !!Hidraulico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:35'!valorMaximo	^ valorMaximo! !!Hidraulico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:35'!valorMaximo: anObject	valorMaximo := anObject! !Sensor1 subclass: #Metrico	instanceVariableNames: 'valorMinimo'	classVariableNames: ''	package: 'TP PPR'!!Metrico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/4/2021 18:24'!medidasIncorrectas		|cantidadIncorrectas|		cantidadIncorrectas := 0.		medidas do: 		[:elem | elem <= self valorMinimo		ifTrue:[cantidadIncorrectas := cantidadIncorrectas + 1]]. 		^ cantidadIncorrectas.! !!Metrico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/5/2021 17:34'!medidasCorrectas		|cantidadCorrectas|		cantidadCorrectas := 0.		medidas do: 		[:elem | elem > self valorMinimo		ifTrue:[cantidadCorrectas := cantidadCorrectas + 1]]. 		^ cantidadCorrectas.! !!Metrico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:36'!valorMinimo	^ valorMinimo! !!Metrico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:36'!valorMinimo: anObject	valorMinimo := anObject! !!Metrico methodsFor: 'converting' stamp: 'DarioSkidelsky 9/8/2021 14:28'!asString		^ super asString, 'Valor Minimo: ', valorMinimo asString, String cr.! !!Metrico methodsFor: 'initialization' stamp: 'DarioSkidelsky 9/6/2021 17:10'!initialize		super initialize.		valorMinimo := 0.0.! !Sensor1 subclass: #Termico	instanceVariableNames: 'valorMaximo'	classVariableNames: ''	package: 'TP PPR'!!Termico methodsFor: 'initialization' stamp: 'DarioSkidelsky 9/6/2021 17:10'!initialize		super initialize.		valorMaximo := 0.0.! !!Termico methodsFor: 'converting' stamp: 'DarioSkidelsky 9/8/2021 14:28'!asString		^ super asString, 'Valor Maximo: ', valorMaximo asString, String cr.! !!Termico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/4/2021 18:24'!medidasIncorrectas		|cantidadIncorrectas|		cantidadIncorrectas := 0.		medidas do: 		[:elem | elem >= self valorMaximo		ifTrue:[cantidadIncorrectas := cantidadIncorrectas + 1]]. 		^ cantidadIncorrectas.! !!Termico methodsFor: 'validations' stamp: 'DarioSkidelsky 9/4/2021 18:25'!medidasCorrectas		|cantidadCorrectas|		cantidadCorrectas := 0.		medidas do: 		[:elem | elem < self valorMaximo		ifTrue:[cantidadCorrectas := cantidadCorrectas + 1]]. 		^ cantidadCorrectas.! !!Termico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:36'!valorMaximo: anObject	valorMaximo := anObject! !!Termico methodsFor: 'accessing' stamp: 'DarioSkidelsky 9/4/2021 16:36'!valorMaximo	^ valorMaximo! !